from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, ContextTypes, filters

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
WELCOME_MESSAGE = (
    "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, –¥–æ—Ä–æ–≥–æ–π –∏–Ω–≤–µ—Å—Ç–æ—Ä! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤—Å–µ —Ç–≤–æ–∏ –∏–Ω–≤–µ—Å—Ç–æ—Ä—Å–∫–∏–µ –º–µ—á—Ç—ã! "
    "–ù–∞–ø–∏—à–∏ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å."
)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(WELCOME_MESSAGE)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–º–æ—â–∏
    keyboard = [
        [InlineKeyboardButton("–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã", callback_data="faq")],
        [InlineKeyboardButton("–•–æ—á—É –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é", callback_data="get_strategy")],
        [InlineKeyboardButton("–•–æ—á—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ü–µ–Ω–∫—É —Ü–µ–ª–µ–π", callback_data="send_request")],
        [InlineKeyboardButton("–•–æ—á—É —É–≤–∏–¥–µ—Ç—å Dash", url="http://127.0.0.1:8050/")],  # –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ:", reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –∏–∑ –∫–æ–º–∞–Ω–¥—ã /help
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏
    if query.data == "faq":
        await query.edit_message_text("‚ùì **–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:**\n\n(–î–æ–±–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç FAQ –∑–¥–µ—Å—å.)")
    elif query.data == "get_strategy":
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ä–æ–∫–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        strategy_keyboard = [
            [InlineKeyboardButton("–ù–∞ 1 –≥–æ–¥ (–ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è)", callback_data="short_term")],
            [InlineKeyboardButton("–ù–∞ 1‚Äì3 –≥–æ–¥–∞ (–°—Ä–µ–¥–Ω–µ—Å—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è)", callback_data="mid_term")],
            [InlineKeyboardButton("–ù–∞ 3‚Äì5 –ª–µ—Ç (–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è)", callback_data="long_term")],
            [InlineKeyboardButton("–ù–∞ 5+ –ª–µ—Ç (–í—ã—Å–æ–∫–æ–¥–æ—Ö–æ–¥–Ω–∞—è –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è)", callback_data="very_long_term")],
        ]
        reply_markup = InlineKeyboardMarkup(strategy_keyboard)
        await query.edit_message_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ä–æ–∫ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Ö–æ–¥—è—â—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é:",
            reply_markup=reply_markup
        )
    elif query.data == "send_request":
        # –°–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –≤–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞
        await query.edit_message_text("‚úçÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –≤–∏–¥–µ.")
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        context.user_data["awaiting_request"] = True

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å)
async def handle_text_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ—Ç—Å—è –ª–∏ –∑–∞–ø—Ä–æ—Å
    if context.user_data.get("awaiting_request"):
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_request = update.message.text
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å (–∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É, –Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –ø–æ—á—Ç—É –∏–ª–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)
        print(f"–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å: {user_request}")  # –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏

        # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await update.message.reply_text("‚úâÔ∏è –í–∞—à –∑–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        context.user_data["awaiting_request"] = False
    else:
        # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤–Ω–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        await update.message.reply_text("–ù–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ –≤—ã –∏–º–µ–µ—Ç–µ –≤ –≤–∏–¥—É. –ù–∞–ø–∏—à–∏—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.")

# –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è –æ—Ç–≤–µ—Ç–∞
STRATEGIES = {
    "short_term": (
        "üìà **–ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è (–¥–æ 1 –≥–æ–¥–∞):**\n\n"
        "–¶–µ–ª—å: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–∞–ø–∏—Ç–∞–ª–∞ —Å –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º–∏ —Ä–∏—Å–∫–∞–º–∏ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –Ω–µ–±–æ–ª—å—à–æ–π –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏.\n\n"
        "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n"
        "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:\n"
        "- –î–µ–ø–æ–∑–∏—Ç—ã –≤ –±–∞–Ω–∫–∞—Ö —Å –≤—ã—Å–æ–∫–æ–π –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å—é (–¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å 3‚Äì6% –≥–æ–¥–æ–≤—ã—Ö).\n"
        "- –û–§–ó (–æ–±–ª–∏–≥–∞—Ü–∏–∏ —Ñ–µ–¥–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∑–∞–π–º–∞) —Å –∫–æ—Ä–æ—Ç–∫–∏–º —Å—Ä–æ–∫–æ–º –¥–æ –ø–æ–≥–∞—à–µ–Ω–∏—è.\n"
        "- –í—ã—Å–æ–∫–æ–ª–∏–∫–≤–∏–¥–Ω—ã–µ ETF –Ω–∞ –¥–µ–Ω–µ–∂–Ω—ã–π —Ä—ã–Ω–æ–∫ –∏–ª–∏ –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–µ –æ–±–ª–∏–≥–∞—Ü–∏–∏.\n\n"
        "–†–∏—Å–∫–∏: –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ.\n\n"
        "–ü–æ—Ä—Ç—Ñ–µ–ª—å:\n"
        "- 60% ‚Äî –±–∞–Ω–∫–æ–≤—Å–∫–∏–π –¥–µ–ø–æ–∑–∏—Ç.\n"
        "- 30% ‚Äî –∫—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω—ã–µ –æ–±–ª–∏–≥–∞—Ü–∏–∏.\n"
        "- 10% ‚Äî ETF –Ω–∞ –¥–µ–Ω–µ–∂–Ω—ã–π —Ä—ã–Ω–æ–∫."
    ),
    "mid_term": (
        "üìà **–°—Ä–µ–¥–Ω–µ—Å—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è (1‚Äì3 –≥–æ–¥–∞):**\n\n"
        "–¶–µ–ª—å: –£–º–µ—Ä–µ–Ω–Ω–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–∞–ø–∏—Ç–∞–ª–∞ —Å –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –Ω–∏–∑–∫–∏–º —É—Ä–æ–≤–Ω–µ–º —Ä–∏—Å–∫–∞.\n\n"
        "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n"
        "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:\n"
        "- –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –æ–±–ª–∏–≥–∞—Ü–∏–∏ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–æ–Ω–Ω–æ–≥–æ —É—Ä–æ–≤–Ω—è.\n"
        "- –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ ETF (–∞–∫—Ü–∏–∏ + –æ–±–ª–∏–≥–∞—Ü–∏–∏).\n"
        "- –î–∏–≤–∏–¥–µ–Ω–¥–Ω—ã–µ –∞–∫—Ü–∏–∏ –∫—Ä—É–ø–Ω—ã—Ö –∫–æ–º–ø–∞–Ω–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, ¬´–≥–æ–ª—É–±—ã–µ —Ñ–∏—à–∫–∏¬ª).\n\n"
        "–†–∏—Å–∫–∏: –£–º–µ—Ä–µ–Ω–Ω—ã–µ.\n\n"
        "–ü–æ—Ä—Ç—Ñ–µ–ª—å:\n"
        "- 40% ‚Äî –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –æ–±–ª–∏–≥–∞—Ü–∏–∏.\n"
        "- 40% ‚Äî –¥–∏–≤–∏–¥–µ–Ω–¥–Ω—ã–µ –∞–∫—Ü–∏–∏.\n"
        "- 20% ‚Äî —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ ETF."
    ),
    "long_term": (
        "üìà **–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è (3‚Äì5 –ª–µ—Ç):**\n\n"
        "–¶–µ–ª—å: –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –∫–∞–ø–∏—Ç–∞–ª–∞ –∑–∞ —Å—á–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ–≥–æ —Ä–æ—Å—Ç–∞ —Ä—ã–Ω–∫–∞.\n\n"
        "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n"
        "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:\n"
        "- –ò–Ω–¥–µ–∫—Å–Ω—ã–µ —Ñ–æ–Ω–¥—ã (ETF) –Ω–∞ –∞–∫—Ü–∏–∏ —Ä–∞–∑–≤–∏–≤–∞—é—â–∏—Ö—Å—è –∏ —Ä–∞–∑–≤–∏—Ç—ã—Ö —Ä—ã–Ω–∫–æ–≤.\n"
        "- –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –æ–±–ª–∏–≥–∞—Ü–∏–∏ —Å –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–º —Ä–∏—Å–∫–æ–º (–Ω–æ –≤—ã—Å–æ–∫–æ–π –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç—å—é).\n"
        "- –ü–∞–∏ –≤ —Ñ–æ–Ω–¥–∞—Ö –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏ (REITs).\n\n"
        "–†–∏—Å–∫–∏: –°—Ä–µ–¥–Ω–∏–µ.\n\n"
        "–ü–æ—Ä—Ç—Ñ–µ–ª—å:\n"
        "- 60% ‚Äî –∏–Ω–¥–µ–∫—Å–Ω—ã–µ ETF –Ω–∞ —à–∏—Ä–æ–∫–∏–π —Ä—ã–Ω–æ–∫.\n"
        "- 30% ‚Äî –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ –æ–±–ª–∏–≥–∞—Ü–∏–∏.\n"
        "- 10% ‚Äî —Ñ–æ–Ω–¥—ã –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏."
    ),
    "very_long_term": (
        "üìà **–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è (–±–æ–ª–µ–µ 5 –ª–µ—Ç):**\n\n"
        "–¶–µ–ª—å: –ú–∞–∫—Å–∏–º–∏–∑–∞—Ü–∏—è –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –∑–∞ —Å—á–µ—Ç –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –≤ –∞–∫—Ç–∏–≤—ã —Å –≤—ã—Å–æ–∫–∏–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–æ–º —Ä–æ—Å—Ç–∞.\n\n"
        "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n"
        "–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã:\n"
        "- –ê–∫—Ü–∏–∏ –∫–æ–º–ø–∞–Ω–∏–π —Ä–æ—Å—Ç–∞ (—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏, —Å—Ç–∞—Ä—Ç–∞–ø—ã).\n"
        "- ETF –Ω–∞ —Ä—ã–Ω–∫–∏ —Å –≤—ã—Å–æ–∫–∏–º –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–æ–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ê–∑–∏–∏ –∏–ª–∏ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π).\n"
        "- –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏ (–∑–æ–ª–æ—Ç–æ, –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã ‚Äî –¥–æ 5%).\n\n"
        "–†–∏—Å–∫–∏: –í—ã—Å–æ–∫–∏–µ.\n\n"
        "–ü–æ—Ä—Ç—Ñ–µ–ª—å:\n"
        "- 70% ‚Äî –∞–∫—Ü–∏–∏ –∫–æ–º–ø–∞–Ω–∏–π —Ä–æ—Å—Ç–∞.\n"
        "- 20% ‚Äî ETF –Ω–∞ —Ä—ã–Ω–∫–∏ —Å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª–æ–º —Ä–æ—Å—Ç–∞.\n"
        "- 10% ‚Äî –∑–æ–ª–æ—Ç–æ –∏–ª–∏ –¥—Ä—É–≥–∏–µ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–µ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏."
    ),
}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
async def strategy_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø–æ –∫–ª—é—á—É
    strategy_key = query.data
    strategy = STRATEGIES.get(strategy_key, "–°—Ç—Ä–∞—Ç–µ–≥–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
    await query.edit_message_text(strategy, parse_mode="Markdown")

# –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥
def main():
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä Application —Å –≤–∞—à–∏–º —Ç–æ–∫–µ–Ω–æ–º
    application = Application.builder().token("8026798915:AAGGljh6MXg43HKjHEJU_xQGYKq7JPsae6M").build()

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–Ω–æ–ø–æ–∫
    application.add_handler(CallbackQueryHandler(button_handler, pattern="^(faq|get_strategy|send_request)$"))
    application.add_handler(CallbackQueryHandler(strategy_handler, pattern="^(short_term|mid_term|long_term|very_long_term)$"))

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text_message))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling()

if __name__ == "__main__":
    main()
