from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, MessageHandler, ContextTypes, filters

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
WELCOME_MESSAGE = (
    "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π, –¥–æ—Ä–æ–≥–æ–π –∏–Ω–≤–µ—Å—Ç–æ—Ä! –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤—Å–µ —Ç–≤–æ–∏ –∏–Ω–≤–µ—Å—Ç–æ—Ä—Å–∫–∏–µ –º–µ—á—Ç—ã! "
    "–ù–∞–ø–∏—à–∏ /help, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫ —è –º–æ–≥—É –ø–æ–º–æ—á—å."
)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    await update.message.reply_text(WELCOME_MESSAGE)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–º–æ—â–∏
    keyboard = [
        [InlineKeyboardButton("–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã", callback_data="faq")],
        [InlineKeyboardButton("–•–æ—á—É –ø–æ–ª—É—á–∏—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏—é", callback_data="get_strategy")],
        [InlineKeyboardButton("–•–æ—á—É –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ü–µ–Ω–∫—É —Ü–µ–ª–µ–π", callback_data="send_request")],
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ:", reply_markup=reply_markup)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –∏–∑ –∫–æ–º–∞–Ω–¥—ã /help
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()

    # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏
    if query.data == "faq":
        await query.edit_message_text("‚ùì **–ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã:**\n\n(–î–æ–±–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç FAQ –∑–¥–µ—Å—å.)")
    elif query.data == "get_strategy":
        # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å—Ä–æ–∫–∞ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        strategy_keyboard = [
            [InlineKeyboardButton("–ù–∞ 1 –≥–æ–¥ (–ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è)", callback_data="short_term")],
            [InlineKeyboardButton("–ù–∞ 1‚Äì3 –≥–æ–¥–∞ (–°—Ä–µ–¥–Ω–µ—Å—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è)", callback_data="mid_term")],
            [InlineKeyboardButton("–ù–∞ 3‚Äì5 –ª–µ—Ç (–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è)", callback_data="long_term")],
            [InlineKeyboardButton("–ù–∞ 5+ –ª–µ—Ç (–í—ã—Å–æ–∫–æ–¥–æ—Ö–æ–¥–Ω–∞—è –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è)", callback_data="very_long_term")],
        ]
        reply_markup = InlineKeyboardMarkup(strategy_keyboard)
        await query.edit_message_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ä–æ–∫ –∏–Ω–≤–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Ö–æ–¥—è—â—É—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é:",
            reply_markup=reply_markup
        )
    elif query.data == "send_request":
        # –°–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –≤–≤–µ—Å—Ç–∏ —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞
        await query.edit_message_text("‚úçÔ∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –≤–∏–¥–µ.")
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        context.user_data["awaiting_request"] = True

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å)
async def handle_text_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ–∂–∏–¥–∞–µ—Ç—Å—è –ª–∏ –∑–∞–ø—Ä–æ—Å
    if context.user_data.get("awaiting_request"):
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_request = update.message.text
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å (–∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É, –Ω–∞–ø—Ä–∏–º–µ—Ä, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞ –ø–æ—á—Ç—É –∏–ª–∏ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö)
        print(f"–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å: {user_request}")  # –í—ã–≤–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª—å –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏

        # –û—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await update.message.reply_text("‚úâÔ∏è –í–∞—à –∑–∞–ø—Ä–æ—Å –ø—Ä–∏–Ω—è—Ç! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")
        # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        context.user_data["awaiting_request"] = False
    else:
        # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤–Ω–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        await update.message.reply_text("–ù–µ –ø–æ–Ω–∏–º–∞—é, —á—Ç–æ –≤—ã –∏–º–µ–µ—Ç–µ –≤ –≤–∏–¥—É. –ù–∞–ø–∏—à–∏—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.")

# –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–ª—è –æ—Ç–≤–µ—Ç–∞
STRATEGIES = {
    "short_term": "üìà **–ö—Ä–∞—Ç–∫–æ—Å—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è (–¥–æ 1 –≥–æ–¥–∞):**\n\n(–î–æ–±–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –Ω–∞ 1 –≥–æ–¥ –∑–¥–µ—Å—å.)",
    "mid_term": "üìà **–°—Ä–µ–¥–Ω–µ—Å—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è (1‚Äì3 –≥–æ–¥–∞):**\n\n(–î–æ–±–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –Ω–∞ 1‚Äì3 –≥–æ–¥–∞ –∑–¥–µ—Å—å.)",
    "long_term": "üìà **–î–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è (3‚Äì5 –ª–µ—Ç):**\n\n(–î–æ–±–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –Ω–∞ 3‚Äì5 –ª–µ—Ç –∑–¥–µ—Å—å.)",
    "very_long_term": "üìà **–í—ã—Å–æ–∫–æ–¥–æ—Ö–æ–¥–Ω–∞—è –¥–æ–ª–≥–æ—Å—Ä–æ—á–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è (5+ –ª–µ—Ç):**\n\n(–î–æ–±–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –Ω–∞ 5+ –ª–µ—Ç –∑–¥–µ—Å—å.)",
}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏
async def strategy_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    await query.answer()

    # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏ –ø–æ –∫–ª—é—á—É
    strategy_key = query.data
    strategy = STRATEGIES.get(strategy_key, "–°—Ç—Ä–∞—Ç–µ–≥–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
    await query.edit_message_text(strategy, parse_mode="Markdown")

# –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–¥
def main():
    # –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä Application —Å –≤–∞—à–∏–º —Ç–æ–∫–µ–Ω–æ–º
    application = Application.builder().token("8026798915:AAGGljh6MXg43HKjHEJU_xQGYKq7JPsae6M").build()

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–Ω–æ–ø–æ–∫
    application.add_handler(CallbackQueryHandler(button_handler, pattern="^(faq|get_strategy|send_request)$"))
    application.add_handler(CallbackQueryHandler(strategy_handler, pattern="^(short_term|mid_term|long_term|very_long_term)$"))

    # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text_message))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling()

if __name__ == "__main__":
    main()
